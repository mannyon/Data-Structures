

****************** Beats 100% users on Leetcode *********************

class Solution {
public:
    int strStr(string haystack, string needle) {

        int found = haystack.find(needle);
        if(haystack.find(needle) == string::npos){
            return -1;
        }
        return found;
    }
};





****************** Beats 15% users on Leetcode and this is sliding window method **************


class Solution {
public:
    int strStr(string haystack, string needle) {
        int n = haystack.size();
        int m = needle.size();

        for(int i=0; i<=n-m; i++){
            for(int j=0; j<m; j++){
                if(needle[j] != haystack[i+j]){
                    break;
                }
                if(j==m-1){
                    return i;
                }
            }
        }
        return -1;
    }
};