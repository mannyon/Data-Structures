//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template for C++

class Solution {
  public:
  
  int row[4] = {-1,1,0,0};
  int col[4] = {0,0,-1,1};
  string dir = "UDLR";
  
  bool valid(int i, int j, int n){
      return i>=0 && j>=0 && i<n && j<n;
  }
  
    void findWays(vector<vector<int>>&mat, int i, int j, int n, string&path, 
    vector<vector<bool>> &visited, vector<string>&ans){
        if(i == n-1 && j == n-1){
            ans.push_back(path);
            return;
        }
        
        visited[i][j] = 1;
        
        for(int k=0; k<4; k++){
            if(valid(i+row[k], j+col[k], n) && mat[i+row[k]][j+col[k]] && !visited[i+row[k]][j+col[k]]){
                path.push_back(dir[k]);
                findWays(mat,i+row[k],j+col[k],n,path,visited,ans);
                path.pop_back();
                
            }
        }
        visited[i][j] = 0;
    }
    
    vector<string> findPath(vector<vector<int>> &mat) {
        string path = "";
        if(mat[0][0] == 0 || mat[mat.size()-1][mat.size()-1]){
            return -1;
        }
        
        int i = 0;
        int j = 0;
        int n = mat.size();
        
        vector<vector<bool>> visited(n, vector<bool>(n, false));
        vector<string>ans;
        
        findWays(mat, i, j, n, path, visited, ans);
        
        return ans;
    }
};


//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<vector<int>> m(n, vector<int>(n, 0));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                cin >> m[i][j];
            }
        }
        Solution obj;
        vector<string> result = obj.findPath(m);
        sort(result.begin(), result.end());
        if (result.size() == 0)
            cout << -1;
        else
            for (int i = 0; i < result.size(); i++)
                cout << result[i] << " ";
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends